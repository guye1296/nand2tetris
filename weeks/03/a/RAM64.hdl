// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // We can divide `address` into two parts - the chip group and the internal address
    DMux8Way(in=load, sel=address[3..5], a=ram8Group0, b=ram8Group1, c=ram8Group2, d=ram8Group3, e=ram8Group4, f=ram8Group5, g=ram8Group6, h=ram8Group7);
    // We then `and` each group 
    And(a=load, b=ram8Group0, out=shouldLoadGroup0);
    RAM8(in=in, load=shouldLoadGroup0, address=address[0..2], out=outGroup0);
    And(a=load, b=ram8Group1, out=shouldLoadGroup1);
    RAM8(in=in, load=shouldLoadGroup1, address=address[0..2], out=outGroup1);
    And(a=load, b=ram8Group2, out=shouldLoadGroup2);
    RAM8(in=in, load=shouldLoadGroup2, address=address[0..2], out=outGroup2);
    And(a=load, b=ram8Group3, out=shouldLoadGroup3);
    RAM8(in=in, load=shouldLoadGroup3, address=address[0..2], out=outGroup3);
    And(a=load, b=ram8Group4, out=shouldLoadGroup4);
    RAM8(in=in, load=shouldLoadGroup4, address=address[0..2], out=outGroup4);
    And(a=load, b=ram8Group5, out=shouldLoadGroup5);
    RAM8(in=in, load=shouldLoadGroup5, address=address[0..2], out=outGroup5);
    And(a=load, b=ram8Group6, out=shouldLoadGroup6);
    RAM8(in=in, load=shouldLoadGroup6, address=address[0..2], out=outGroup6);
    And(a=load, b=ram8Group7, out=shouldLoadGroup7);
    RAM8(in=in, load=shouldLoadGroup7, address=address[0..2], out=outGroup7);
    // Then we mux the groups according to the selected group
    Mux8Way16(a=outGroup0, b=outGroup1, c=outGroup2, d=outGroup3, e=outGroup4, f=outGroup5, g=outGroup6, h=outGroup7, sel=address[3..5], out=out);
}